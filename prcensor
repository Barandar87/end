package main

import (
	"encoding/json"
	"log"
	"net/http"
	"strings"
)

// структура для входящего JSON-запроса
type Comment struct {
	ID          int
	ParentID    int //news item ID
	Contents    string
	PublishedOn string
	URL         string
}

// список запрещённых слов
var bannedWords = []string{"йцукен", "qwerty", "zxvbnm"}

// функция проверки текста на запрещённые слова
func containsBannedWords(text string) bool {
	lowerText := strings.ToLower(text)
	for _, word := range bannedWords {
		if strings.Contains(lowerText, word) {
			return true
		}
	}
	return false
}

// обработчик POST /check
func checkHandler(w http.ResponseWriter, r *http.Request) {
	if r.Method != http.MethodPost {
		http.Error(w, "Method not allowed", http.StatusMethodNotAllowed)
		return
	}

	var req Comment
	err := json.NewDecoder(r.Body).Decode(&req)
	if err != nil || strings.TrimSpace(req.Contents) == "" {
		http.Error(w, "Invalid request", http.StatusBadRequest)
		return
	}

	if containsBannedWords(req.Contents) {
		http.Error(w, "Comment contains banned words", http.StatusBadRequest)
		return
	}

	w.WriteHeader(http.StatusOK)
	w.Write([]byte("Comment is clean"))
}

func main() {
	http.HandleFunc("/check", checkHandler)
	log.Println("Server running on :8080")
	log.Fatal(http.ListenAndServe(":8080", nil))
}
